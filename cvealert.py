#!/usr/bin/python3

# 群机器人的webhook写这里
webhooks = [
    "",

]


import requests
import time
import os

# https://developers.dingtalk.com/document/robots/custom-robot-access
# https://work.weixin.qq.com/api/doc/90000/90136/91770


headers = {
    "Referer": "https://github.com/p7e4/CVE-Alert",
    "User-Agent": "CVE-Alert"
}


def die(msg):
    print(f"[{time.strftime('%Y-%m-%dT%X+00:00', time.gmtime(time.time()))}] {msg}")
    exit()


def get_cve(up_time):
    api = "https://services.nvd.nist.gov/rest/json/cves/1.0?resultsPerPage=2000&pubStartDate=" + up_time + "&pubEndDate=" + time.strftime("%Y-%m-%dT%X:000 UTC", time.gmtime(time.time()))
    data = []
    for i in range(20):
        try:
            r = requests.get(api, timeout=100, headers=headers)
            if r.status_code == 200:
                for item in r.json()["result"]["CVE_Items"]:
                    refs = []
                    for ref in item["cve"]["references"]["reference_data"]:
                        refs.append(f"[{ref['url']}]({ref['url']})")
                    data.append([item["cve"]["CVE_data_meta"]["ID"], item["cve"]["description"]["description_data"][0]["value"].replace("\n\n", "\n").rstrip("\r\n"), "\n".join(refs)])

                return data
            else:
                continue

        except Exception as e:
            print(e)
            time.sleep(30)

    die(f"多次获取CVE列表失败")


def main():
    runtime = time.time()
    if os.path.exists(".cvealert"):
        with open(".cvealert") as f:
            if data:=f.read():
                uptime = float(data)
            else:
                uptime = time.time() - 60 * 60 * 24
    else:
        uptime = time.time() - 60 * 60 * 24

    result = get_cve(time.strftime("%Y-%m-%dT%X:000 UTC", time.gmtime(uptime)))

    if result:
        send_notification(result)
        print(f"[{time.strftime('%Y-%m-%d %X')}] 新增{len(result)}条CVE信息")
    else:
        print(f"[{time.strftime('%Y-%m-%d %X')}] 无更新CVE信息")

    try:
        with open(".cvealert", "w") as f:
            f.write(str(runtime))
    except Exception as e:
        die(f"写入进度失败！\n{e}")


def send_notification(msg):
    for i in msg[::-1]:
        for webhook in webhooks:
            if not webhook: continue
            if webhook.find("oapi.dingtalk.com") != -1:
                markdown = {
                    "title":"有新的CVE推送信息",
                    "text": f"**[{i[0]}](https://nvd.nist.gov/vuln/detail/{i[0]})**\n> {i[1]}\n\nReferences:\n> {i[2]}"
                }
            elif webhook.find("qyapi.weixin.qq.com") != -1:
                markdown = {
                    "content": f"[{i[0]}](https://nvd.nist.gov/vuln/detail/{i[0]})\n><font color=\"comment\">{i[1]}</font>\n\n" +
                    f"<font color=\"comment\">References:</font>\n>{i[2]}"
                }
            else:
                die("未知的通知类型")

            tmp = {
               "msgtype": "markdown",
               "markdown": markdown
            }

            try:
                r = requests.post(webhook, json=tmp, timeout=20)
                if r.json()["errcode"] != 0:
                    print(f"发送消息失败: {r.text}")

            except Exception as e:
                die(f"发送消息请求失败\n{e}")

        if len(msg) > 20:
            time.sleep(3)


if __name__ == '__main__':
    main()

